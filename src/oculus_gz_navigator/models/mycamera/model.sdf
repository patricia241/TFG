<?xml version="1.0"?>
<sdf version="1.5">
  <model name="mycamera">
    <gravity>0</gravity>
    <pose>0 0 0.05 0 0 0</pose>

    <link name="base_link">
      <gravity>0</gravity>
      <inertial>
        <mass>0.000000000001</mass>
        <inertia>
          <ixx>0.0000000000001</ixx>
          <iyy>0.0000000000001</iyy>
          <izz>0.0000000000001</izz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
      </visual>
      <!-- <sensor name="camera" type="camera">-->
      <!--  <camera>-->
      <!--    <horizontal_fov>1.047</horizontal_fov>-->
      <!--    <image>-->
      <!--     <width>1920</width> -->
      <!--     <height>1080</height>-->
      <!--    </image>-->
      <!--   <clip>-->
      <!--     <near>0.1</near>-->
      <!--      <far>100</far>-->
      <!--    </clip>-->
      <!--  </camera>-->
      <!-- <always_on>1</always_on>-->
      <!-- <update_rate>30</update_rate>-->
      <!--  <visualize>true</visualize>-->

      <!-- Ros camera plugin (Sensor Plugin, publish image on /global_camera/)-->
      <!-- <plugin name="plugin_name" filename="libgazebo_ros_camera.so"> -->
      <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
      <!--  <camera_name>global_camera</camera_name> -->
      <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
      <!--  <frame_name>base_camera_link</frame_name> -->
      <!--  <hack_baseline>0.07</hack_baseline> -->
      <!--</plugin> -->
      <!-- </sensor> -->
      <sensor name="intel_realsense_r200_depth" type="depth">
        <always_on>1</always_on>
        <update_rate>1</update_rate>
        <camera name="realsense_depth_camera"></camera>
        <plugin name="intel_realsense_r200_depth_driver" filename="libgazebo_ros_camera.so">
          <ros>
            <!-- 
              <argument>custom_camera/image_raw:=custom_camera/custom_image</argument>
              <argument>custom_camera/image_depth:=custom_camera/custom_image_depth</argument>
              <argument>custom_camera/camera_info:=custom_camera/custom_info_raw</argument>
              <argument>custom_camera/camera_info_depth:=custom_camera/custom_info_depth</argument>
              <argument>custom_camera/points:=custom_camera/custom_points</argument> 
        -->
          </ros>
          <camera_name>intel_realsense_r200_depth</camera_name>
          <frame_name>base_link</frame_name>
          <hack_baseline>0.07</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <joint name="left_joint" type="fixed">
      <parent>base_link</parent>
      <child>base_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="right_joint" type="fixed">
      <parent>base_link</parent>
      <child>base_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- Camera position plugin -->
    <plugin name="CameraPositionPlugin" filename="libCameraPositionPlugin.so"></plugin>

    <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">

      <ros>
        <!-- <namespace>/tb3</namespace> -->
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>left_joint</left_joint>
      <right_joint>right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.0</wheel_separation>
      <wheel_diameter>0.0</wheel_diameter>
      
      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

    </plugin>
  </model>
</sdf>